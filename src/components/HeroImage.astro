---
import type { ImageMetadata } from 'astro';
import { getImage } from 'astro:assets';

interface Props {
    mobileImgUrl: string | ImageMetadata;
    desktopImgUrl: string | ImageMetadata;
    alt: string;
    pageName?: string;
    indexHu?: boolean;
    indexEn?: boolean;
    containerClass?: string;
}

const {
    mobileImgUrl,
    desktopImgUrl,
    alt,
    pageName,
    indexHu = false,
    indexEn = false,
    containerClass = '',
} = Astro.props;

const mobileImg = await getImage({
    src: mobileImgUrl,
    format: 'webp',
    width: 1080,
    height: 1080,
});

const desktopImg = await getImage({
    src: desktopImgUrl,
    format: 'webp',
    width: 1800,
    height: 550,
});

// const height = desktopImg.rawOptions.height ? `${desktopImg.rawOptions.height}px` : '550px';

// const height = desktopImg.height ? `${desktopImg.height}px` : '550px';

// console.log(desktopImg.rawOptions.height);
---

<div class="hero-image">
    <!-- <div class="overlay" /> -->
    <picture>
        <source media="(max-width: 799px)" srcset={mobileImg.src} />
        <source media="(min-width: 800px)" srcset={desktopImg.src} />
        <img src={desktopImg.src} alt={alt} />
    </picture>
    <div class={`container ${containerClass}`}>
        {
            indexHu ? (
                <div class="index-text-hu">
                    <h1>Az egyetlen kiút befelé vezet</h1>
                    <br />
                    <p>Tradicionális astanga jógaiskola a Paramaguru áldásával</p>
                </div>
            ) : indexEn ? (
                <div class="index-text-en">
                    <h1>The only way OUT is IN</h1>
                    <br />
                    <p>Traditional astanga yoga shala with the blessing of Paramaguru</p>
                </div>
            ) : (
                <div class="page-name">
                    <h1>{pageName}</h1>
                </div>
            )
        }
    </div>
</div>

<!-- <style define:vars={{ height }}> -->
<style>
    /* .overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: orange;
        z-index: -1;
    } */
    .hero-image {
        background-color: orange;
        /* min-height: var(--height); */
        position: relative;

        /* @media only screen and (max-width: 600px) {
--height= 1080px
} */
        img {
            width: 100%;
            height: auto;
        }

        .page-name {
            position: absolute;
            bottom: 20px;
            /* left: 21px; */
            /* color: white; */
            /* padding: 5px 10px;
            border-radius: 5px; */
        }
        .index-text-hu {
            position: absolute;
            top: 80px;
            h1 {
                font-size: 4rem;
            }
        }
        .index-text-en {
            position: absolute;
            top: 80px;
            h1 {
                font-size: 4rem;
            }
        }
    }
</style>
