---
import Carousel from '../Carousel/Carousel.astro';
import EventCardCarousel from '../Events/EventCardCarousel.astro';
import { getLangFromUrl } from '../../i18n/utils';
import { getCollection } from 'astro:content';
import type { ImageMetadata } from 'astro';
import './_sectionEvents.scss';

const { eventType = [], maxEvents = Infinity, lang: propLang } = Astro.props;
const events = await getCollection('events');
const images = await import.meta.glob<{ default: ImageMetadata }>('/src/images/uploads/**/*.{jpeg,jpg,png,gif}');

// Használd a prop-ot, ha meg van adva, egyébként az URL-ből olvasd ki
const lang = propLang || getLangFromUrl(Astro.url);

// Belső fordítások
const translations = {
    hu: {
        sectionEventsTitle: 'Események',
        sectionEventsButton: 'Összes esemény',
        sectionEventsLink: '/esemenyek',
    },
    en: {
        sectionEventsTitle: 'Events',
        sectionEventsButton: 'View all events',
        sectionEventsLink: '/events',
    },
};

const currentTranslation = translations[lang] || translations.hu;

const upcomingEvents = events
    .filter((event) => event.data.published)
    .filter((event) => {
        const eventDate = new Date(event.data.date);
        const today = new Date();
        return eventDate.setHours(0, 0, 0, 0) >= today.setHours(0, 0, 0, 0);
    })
    .filter((event) => eventType.length === 0 || eventType.includes(event.data.eventType))
    .sort((a, b) => new Date(a.data.date).getTime() - new Date(b.data.date).getTime())
    .slice(0, maxEvents);
---

<div class="section-events container mb-40px">
    <div>
        <h2 class="section-events__title heading heading--1 text-center mb-20px">
            {currentTranslation.sectionEventsTitle}
        </h2>
    </div>

    <!-- Carousel 1080px alatt -->
    <div class="carousel-wrapper">
        <Carousel>
            {
                upcomingEvents.map((event) => (
                    <div class="section-events__slide embla__slide">
                        <EventCardCarousel
                            title={lang === 'en' ? event.data.titleEnglish || event.data.title : event.data.title}
                            date={event.data.date}
                            eventImage={event.data.eventimage}
                            eventLink={
                                lang === 'en'
                                    ? event.data.eventlinkEnglish || event.data.eventlink
                                    : event.data.eventlink
                            }
                            images={images}
                            lang={lang}
                        />
                    </div>
                ))
            }
        </Carousel>
    </div>

    <!-- Flexbox elrendezés 1080px felett -->
    <div class="flex-wrapper">
        {
            upcomingEvents.map((event) => (
                <div class="flex-item mt-20px">
                    <EventCardCarousel
                        title={lang === 'en' ? event.data.titleEnglish || event.data.title : event.data.title}
                        date={event.data.date}
                        eventImage={event.data.eventimage}
                        eventLink={
                            lang === 'en' ? event.data.eventlinkEnglish || event.data.eventlink : event.data.eventlink
                        }
                        images={images}
                        lang={lang}
                    />
                </div>
            ))
        }
    </div>

    <div class="centered-block">
        <a
            href={currentTranslation.sectionEventsLink}
            class="btn btn--full-width-mobile btn--primary--outline mt-20px"
            aria-label={currentTranslation.sectionEventsButton}
        >
            {currentTranslation.sectionEventsButton}
        </a>
    </div>
</div>
