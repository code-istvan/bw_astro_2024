---
import Icons from '../Icons/Icons.astro';

interface Props {
    href?: string;
    variant?: 'primary' | 'secondary' | 'third' | 'third-naked-orange' | 'btn--third--naked-gray';
    iconName: string;
    iconPosition?: 'left' | 'right';
    iconClass?: string;
    iconColor?: string;
    class?: string;
    ariaLabel?: string;
}

const {
    href,
    variant = 'primary',
    iconName,
    iconPosition = 'left',
    iconClass = '',
    iconColor,
    class: className = '',
    ariaLabel,
} = Astro.props;

const baseClass = 'btn';
const variantClass = variant ? (variant.startsWith('btn--') ? variant : `${baseClass}--${variant}`) : '';
const combinedClass = [baseClass, variantClass, className].filter(Boolean).join(' ');
---

{
    href ? (
        <a href={href} class={combinedClass} aria-label={ariaLabel}>
            {iconPosition === 'left' && <Icons name={iconName} class={iconClass} color={iconColor} />}
            <span class="btn-content">
                <slot />
            </span>
            {iconPosition === 'right' && <Icons name={iconName} class={iconClass} color={iconColor} />}
        </a>
    ) : (
        <button type="button" class={combinedClass} aria-label={ariaLabel}>
            {iconPosition === 'left' && <Icons name={iconName} class={iconClass} />}
            <span class="btn-content">
                <slot />
            </span>
            {iconPosition === 'right' && <Icons name={iconName} class={iconClass} />}
        </button>
    )
}

<style>
    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }
    .btn-content {
        display: inline-block;
    }
</style>
