---
type HTMLInputTypeAttribute =
    | 'button'
    | 'checkbox'
    | 'color'
    | 'date'
    | 'datetime-local'
    | 'email'
    | 'file'
    | 'hidden'
    | 'image'
    | 'month'
    | 'number'
    | 'password'
    | 'radio'
    | 'range'
    | 'reset'
    | 'search'
    | 'submit'
    | 'tel'
    | 'text'
    | 'time'
    | 'url'
    | 'week';

interface InputFieldProps {
    id: string;
    value: string;
    label: string;
    name: string;
    placeholder: string;
    type: HTMLInputTypeAttribute;
    onChange: (event: Event) => void;
    required: boolean;
    pattern?: string;
}

const { id, value, label, name, placeholder, type, onChange, required, pattern } = Astro.props as InputFieldProps;
---

<div class="input--field-box">
    <input
        id={id}
        type={type}
        value={value}
        name={name}
        aria-label={label}
        class="form-style"
        placeholder={placeholder}
        pattern={pattern}
        required={required}
        oninput="handleInputChange"
    />
</div>

<script>
    function handleInputChange(event) {
        const props = Astro.props;
        props.onChange(event);
    }
</script>

<style lang="scss">
    @use 'sass:math';
    @import '/src/sass/global';

    .input--field-box {
        width: 100%;
        background: transparent;
        box-shadow: 0px 0px 0px 2px $color-shades-lightGray inset;
        height: 44px;

        &:focus-within {
            box-shadow: 0px 0px 0px 2px $color-brand-orange inset;
            color: $color-brand-orange;
            border-radius: none !important;
        }
    }

    input[type='text'],
    input[type='email'] {
        background: transparent;
        padding-left: 16px;
        font-family: $small-font-size-desktop;
        font-weight: 600;
        color: $color-shades-lightGray;
        height: 42px;
        width: calc(100% - 14px);

        &:focus {
            color: $color-brand-orange;
        }
    }

    #gatsby-focus-wrapper {
        padding-top: var(--header-height-base);
    }
</style>
