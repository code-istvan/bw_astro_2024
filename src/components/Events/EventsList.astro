---
import EventCard from './EventCard.astro';
import { getCollection } from 'astro:content';
import type { ImageMetadata } from 'astro';

// Add excludedEventTypes parameter with default empty array
const {
    eventType = [],
    maxEvents = Infinity,
    language = 'hu',
    excludedEventTypes = [], // Új paraméter a kizárandó eseménytípusokhoz
} = Astro.props;

const events = await getCollection('events');
const images = await import.meta.glob<{ default: ImageMetadata }>('/src/images/uploads/**/*.{jpeg,jpg,png,gif}');

function formatDate(date: string | Date, lang: string): string {
    const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'short', day: 'numeric' };
    const formattedDate = new Intl.DateTimeFormat(`${lang}-${lang.toUpperCase()}`, options)
        .format(new Date(date))
        .toUpperCase();
    // Only remove dots for Hungarian dates
    return lang === 'hu' ? formattedDate.replace(/\./g, '') : formattedDate;
}

const upcomingEvents = events
    .filter((event) => event.data.published)
    .filter((event) => new Date(event.data.date) >= new Date())
    .filter((event) => {
        // Először ellenőrizzük, hogy az eseménytípus nincs-e a kizárt típusok között
        if (excludedEventTypes.includes(event.data.eventType)) {
            return false;
        }

        // Majd ellenőrizzük a meglévő feltételt
        return eventType.length === 0 || eventType.includes(event.data.eventType);
    })
    .sort((a, b) => new Date(a.data.date).getTime() - new Date(b.data.date).getTime())
    .slice(0, maxEvents);
---

<div class="mt-40px">
    {
        upcomingEvents.map((event, index) => (
            <div class="row mb-40px">
                <EventCard
                    title={language === 'en' && event.data.titleEnglish ? event.data.titleEnglish : event.data.title}
                    date={event.data.date}
                    eventImage={event.data.eventimage}
                    eventLink={
                        language === 'en' && event.data.eventlinkEnglish
                            ? event.data.eventlinkEnglish
                            : event.data.eventlink
                    }
                    eventApplicationLink={event.data.eventApplicationLink}
                    images={images}
                    language={language}
                />
                {index < upcomingEvents.length - 1 && <div class="separator-horizontal hidden-mobile mt-40px" />}
            </div>
        ))
    }
</div>
