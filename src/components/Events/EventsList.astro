---
// Az eredeti komponens fájl

import EventCard from './EventCard.astro';
import { getCollection } from 'astro:content';
import type { ImageMetadata } from 'astro';

const { eventType = [], maxEvents = Infinity } = Astro.props;

const events = await getCollection('events');

const images = await import.meta.glob<{ default: ImageMetadata }>('/src/images/uploads/**/*.{jpeg,jpg,png,gif}');

// Dátum formázó függvény a magyar formátumhoz, pontok nélkül
function formatDate(date: string | Date): string {
    const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'short', day: 'numeric' };
    const formattedDate = new Intl.DateTimeFormat('hu-HU', options).format(new Date(date)).toUpperCase();
    return formattedDate.replace(/\./g, ''); // Pontok eltávolítása
}

const upcomingEvents = events
    .filter((event) => event.data.published)
    .filter((event) => new Date(event.data.date) >= new Date())
    .filter((event) => eventType.length === 0 || eventType.includes(event.data.eventType))
    .sort((a, b) => new Date(a.data.date).getTime() - new Date(b.data.date).getTime())
    .slice(0, maxEvents);
---

<div class="mt-40px">
    {
        upcomingEvents.map((event) => (
            <div class="row mb-40px">
                <EventCard
                    title={event.data.title}
                    date={event.data.date}
                    eventImage={event.data.eventimage}
                    eventLink={event.data.eventlink}
                    images={images}
                />
                <div class="separator-horizontal event-card__section--hidden-mobile mt-40px" />
            </div>
        ))
    }
</div>
