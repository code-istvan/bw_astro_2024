---
import { getCollection } from 'astro:content';
import { type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import BlogPostLayout from '../../layouts/BaseLayout.astro';
import { calculateReadingTime, slugify, formatDate } from '../../components/js/utils.js';
import type { ImageMetadata } from 'astro';

export const prerender = true;

export const getStaticPaths = async () => {
    const posts = await getCollection('blog');

    const paths = posts.map((post) => {
        const minutesRead = calculateReadingTime(post.body);

        return {
            params: {
                slug: post.slug,
            },
            props: {
                post,
                minutesRead,
            },
        };
    });
    return paths;
};

const authors = await getCollection('authors');

const images = await import.meta.glob<{ default: ImageMetadata }>('/src/images/uploads/**/*.{jpeg,jpg,png,gif}');
const imagesMobil = await import.meta.glob<{ default: ImageMetadata }>('/src/images/uploads/**/*.{jpeg,jpg,png,gif}');

type Props = {
    post: CollectionEntry<'blog'>;
    minutesRead: number;
};

const { post, minutesRead } = Astro.props;
const { Content } = await post.render();
const currentAuthor = authors.find((author) => author.data.name === post.data.author);

---

<BlogPostLayout title={post.data.title}>
    {
        post.data.image && (
            <section class="desktop_image">
                <Image src={images[post.data.image]()} alt={post.data.title} class="" />
            </section>
        )
    }
    {
        post.data.imageMobil && (
            <section class="mobile_image">
                <Image src={imagesMobil[post.data.imageMobil]()} alt={post.data.title} class="" />
            </section>
        )
    }
    <h1>{post.data.title}</h1>
    <!-- <CustomImage
        imgUrl={images[currentAuthor?.data.authorimage]()}
        alt={currentAuthor?.data.name}
        class="author__avatar author__avatar--small"
    /> -->
    <Image
        src={images[currentAuthor?.data.authorimage]()}
        alt={currentAuthor?.data.name}
        class="author__avatar author__avatar--small"
    />
    <p><a href={`/blog/author/${slugify(post.data.author)}`}>{post.data.author}</a></p>
    <p>{formatDate(post.data.date)}</p>
    <p>{post.data.tags}</p>
    <p>Olvasási idő: {Astro.props.minutesRead} perc</p>
    <Content />
</BlogPostLayout>

<style>
    .author__avatar {
        border-radius: 50%;
    }
    .author__avatar--small {
        border: 2px solid #333;
        height: 56px;
        width: 56px;
    }

    .mobile_image,
    .desktop_image {
     {
        img {
            max-width: 100vw;
            width: 100%;
            height: auto;
        }
    } }

    @media (max-width: 768px) {
        .desktop_image {
            display: none;
        }
    }

    @media (min-width: 768px) {
        .mobile_image {
            display: none;
        }
    }

</style>
