---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { getLangFromUrl } from '../i18n/utils';
import HeroImage from '../components/HeroImage/HeroImage.astro';
import mobileImage from '../images/orarend_mobil.jpg';
import desktopImage from '../images/orarend_desktop.jpg';
import '../sass/pages/_orarend.scss';

const lang = getLangFromUrl(Astro.url);

const metadata = {
    title: 'ÓRAREND',
    description: 'Ezen az oldalon megtalálod jógaiskolánk órarendjét. Jógatanárok, jógafajták, időpontok.',
};

const [schedule, teachers, classes] = await Promise.all([
    getCollection('schedule'),
    getCollection('teachers'),
    getCollection('classes'),
]);

const today = new Date();
today.setHours(0, 0, 0, 0);

const sortedSchedule = schedule
    .filter((item) => new Date(item.data.date) >= today)
    .sort((a, b) => new Date(a.data.date).getTime() - new Date(b.data.date).getTime());

const getTeacherDetails = (teacherId) => teachers.find((t) => t.data.teacherId === teacherId)?.data;

const getClassDetails = (classId) => classes.find((cls) => cls.data.classId === classId)?.data;

const renderClassDetails = (item, index) => {
    const classId = item.data[index ? `class${index}` : 'class'];
    const teacherId = item.data[index ? `teacher${index}` : 'teacher'];
    const classTime = item.data[index ? `classTime${index}` : 'classTime'];

    if (!classId || !teacherId) return null;

    return {
        classDetails: getClassDetails(classId),
        teacherDetails: getTeacherDetails(teacherId),
        classTime,
    };
};
---

<BaseLayout title={metadata.title} description={metadata.description} image={desktopImage}>
    <HeroImage mobileImgUrl={mobileImage} desktopImgUrl={desktopImage} alt={metadata.title} pageName={metadata.title} />
    <div class="container">
        <div class="schedule-list">
            {
                sortedSchedule.map((item) => (
                    <div class="schedule-item" data-key={item.id}>
                        <p>Dátum: {new Date(item.data.date).toLocaleDateString(lang)}</p>
                        {Array.from({ length: 5 }, (_, i) => renderClassDetails(item, i)).map(
                            (details) =>
                                details && (
                                    <div class="class-details">
                                        <p>{details.classTime}</p>
                                        <div>
                                            <h3>{details.classDetails.classHu}</h3>
                                            <p set:html={details.classDetails.classDetailHu} />
                                            <p>Signup: {details.classDetails.classSignUpUrl}</p>
                                        </div>
                                        <p>
                                            <a href={details.teacherDetails.teacherLink}>
                                                {details.teacherDetails.teacher}
                                            </a>
                                        </p>
                                    </div>
                                )
                        )}
                    </div>
                ))
            }
        </div>
    </div>
</BaseLayout>
