---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import HeroImage from '../components/HeroImage/HeroImage.astro';
import mobileImage from '../images/orarend_mobil.jpg';
import desktopImage from '../images/orarend_desktop.jpg';
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

const images = import.meta.glob<{ default: ImageMetadata }>('/src/images/uploads/*.{jpeg,jpg,png,gif}');
const pageTitle = 'Órarend';
const lang = getLangFromUrl(Astro.url);

// Adatok lekérése és feldolgozása
const [schedule, teachers, classes] = await Promise.all([
    getCollection('schedule'),
    getCollection('teachers'),
    getCollection('classes'),
]);

// Dátumszűrés
const today = new Date();
today.setHours(0, 0, 0, 0);

const sortedSchedule = schedule
    .filter((item) => new Date(item.data.date) >= today)
    .sort((a, b) => new Date(a.data.date).getTime() - new Date(b.data.date).getTime());

// Tanári képek betöltése
const teacherImages = Object.fromEntries(
    await Promise.all(
        teachers.map(async (teacher) => {
            if (!teacher.data.teacherImage) return [teacher.data.teacherId, undefined];

            const imagePath = `/${teacher.data.teacherImage.replace(/^\//, '')}`;
            if (!(imagePath in images)) return [teacher.data.teacherId, undefined];

            const imageModule = await images[imagePath]();
            return [teacher.data.teacherId, imageModule.default];
        })
    )
);

// Segédfüggvények
const getTeacherDetails = (teacherId) => {
    const teacher = teachers.find((t) => t.data.teacherId === teacherId)?.data;
    return teacher ? { ...teacher, imageModule: teacherImages[teacher.teacherId] } : undefined;
};

const getClassDetails = (classId) => classes.find((cls) => cls.data.classId === classId)?.data;

const renderClassDetails = (item, index) => {
    const classId = item.data[index ? `class${index}` : 'class'];
    const teacherId = item.data[index ? `teacher${index}` : 'teacher'];
    const classTime = item.data[index ? `classTime${index}` : 'classTime'];

    if (!classId || !teacherId) return null;

    return {
        classDetails: getClassDetails(classId),
        teacherDetails: getTeacherDetails(teacherId),
        classTime,
    };
};
---

<BaseLayout title={pageTitle} image={desktopImage}>
    <HeroImage mobileImgUrl={mobileImage} desktopImgUrl={desktopImage} alt={pageTitle} pageName={pageTitle} />
    <div class="container">
        <div class="schedule-list">
            {
                sortedSchedule.map((item) => (
                    <div class="schedule-item" data-key={item.id}>
                        <p>Dátum: {new Date(item.data.date).toLocaleDateString(lang)}</p>
                        {Array.from({ length: 5 }, (_, i) => renderClassDetails(item, i)).map(
                            (details) =>
                                details && (
                                    <div class="class-details">
                                        <p>{details.classTime}</p>
                                        <div>
                                            <h3>{details.classDetails.classHu}</h3>
                                            <p>Details:</p>
                                            {/* <p>Details: {details.classDetails.classDetailHu}</p> */}
                                            <p set:html={details.classDetails.classDetailHu} />
                                            <p>Signup: {details.classDetails.classSignUpUrl}</p>
                                        </div>
                                        <p>
                                            <a href={details.teacherDetails.teacherLink}>
                                                {details.teacherDetails.teacherImage &&
                                                    details.teacherDetails.imageModule && (
                                                        <Image
                                                            src={details.teacherDetails.imageModule}
                                                            alt={
                                                                details.teacherDetails.huTeacherFullName ||
                                                                details.teacherDetails.teacher
                                                            }
                                                            width={50}
                                                            height={50}
                                                            class="teacher-image"
                                                        />
                                                    )}
                                                {details.teacherDetails.huTeacherFullName ||
                                                    details.teacherDetails.teacher}
                                            </a>
                                        </p>
                                    </div>
                                )
                        )}
                    </div>
                ))
            }
        </div>
    </div>
</BaseLayout>

<style>
    .schedule-item {
        margin-bottom: 20px;
        padding: 10px;
        border: 1px solid #ccc;
    }
    .teacher-image {
        width: 50px;
        height: 50px;
        object-fit: cover;
        margin-right: 10px;
        vertical-align: middle;
        border-radius: 50%;
        border: 2px solid lightgray;
    }
    .class-details {
        margin-bottom: 15px;
    }
</style>
